// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package collector

import (
	"github.com/xiaojiaoyu100/profiler/collector/server"
	"github.com/xiaojiaoyu100/profiler/log"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func InitializeApp() (*App, func(), error) {
	logger, cleanup, err := log.NewLogger()
	if err != nil {
		return nil, nil, err
	}
	v := server.Setters(logger)
	httpServer, err := server.New(v...)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	v2 := Setters(logger, httpServer)
	app, err := New(v2...)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return app, func() {
		cleanup()
	}, nil
}

// wire.go:

func Setters(logger *zap.Logger, server2 *server.HttpServer) []Setter {
	return []Setter{
		WithLogger(logger),
		WithHttpServer(server2),
	}
}
